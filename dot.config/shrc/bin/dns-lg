#!/usr/bin/env bash
DNSLG='http://www.dns-lg.com'
anycast_nodes="google1 google2 opendns1 opendns2 cloudflare quad9 he"
default_nodes="google1 opendns1 cloudflare quad9 he"

__usage__="Usage: $(basename "${0}") [-Aau] name [rrtype]"

OPTIND=1
while getopts ':Aau' opt; do
  case "${opt}" in
    A)
      all_nodes=true
      only_anycast_nodes=false only_unicast_nodes=false
      ;;
    a)
      only_anycast_nodes=true
      only_unicast_nodes=false all_nodes=false
      ;;
    u)
      only_unicast_nodes=true
      only_anycast_nodes=false all_nodes=false
      ;;
    *)
      echo "Unrecognized option -${OPTARG}" >&2
      echo "${__usage__}" >&2
      exit 64 # EX_USAGE
      ;;
  esac
done

shift $((OPTIND - 1))

if  (($# == 0 || $# > 2)); then
  echo "${__usage__}" >&2
  exit 64 # EX_USAGE
fi
if ! hash jq 2>/dev/null; then
  echo "jq: not found" >&2
  exit 69 # EX_UNAVAILABLE
fi
name=$1
rrtype=${2-A}

if [[ ${only_unicast_nodes} == 'true' || ${all_nodes} == 'true' ]]; then
  unicast_nodes=$(
    set -o pipefail;
    curl --fail -s ${DNSLG}/nodes.json | jq -e -r '.nodes[].name' | tr '\n' ' '
  ) || exit 69 # EX_UNAVAILABLE
fi

if ${only_anycast_nodes}; then
  read -ra nodes <<< "${anycast_nodes}"
elif ${only_unicast_nodes}; then
  read -ra nodes <<< "${unicast_nodes}"
elif ${all_nodes}; then
  read -ra nodes <<< "${anycast_nodes} ${unicast_nodes}"
else
  read -ra nodes <<< "${default_nodes}"
fi

for node in "${nodes[@]}"; do
  echo "- ${node}:"
  curl -s "${DNSLG}/${node}/${name}/${rrtype}" \
    | (jq -r '.answer[].rdata' 2>/dev/null || echo '[fail]') \
    | sort -n
done
