# vim: filetype=zsh

prompt_bdd_setup() {
  local \
    co_fade=245 \
    co_error=203 \
    co_attention=224 \
    co_highlight=230

  colorize_by_os() {
    local color
    case "${OSTYPE}" in
      darwin*) color="red"    ;;
      linux*)  color="yellow" ;;
      *)       color="cyan"   ;;
    esac

    echo "%F{${color}}$*%f"
  }

  PS1="%~"
  PS1+="$(colorize_by_os '%#')"  # cwd relative to home and '%' (or '#' if root)

  # One more '%' (or '#' if root) if SHLVL >= 2
  local max_shlvl=2
  [[ -n ${TMUX} ]] && (( max_shlvl++ ))  # Tmux naturally adds to SHLVL. Compensate for that.
  PS1+="%F{${co_highlight}}%(${max_shlvl}L.%#.)%f"  # Ternary expression: %(<n>check.true-text-false-text)

  # '&' if there are background jobs.
  PS1+="%F{${co_attention}}%(1j.&.)%f"

  PS1+=" "  # separate prompt from command input

  RPROMPT="%F{${co_error}}%(?..%?)%f"  # exit status of last process is not 0
  [[ -z ${TMUX} ]] && RPROMPT+=" %F{${co_fade}}%m%f"

  # Prepend parameters to PS1, separated with ':'.
  # e.g. `prompt bdd foo` results "foo:~%"
  if (($# > 0)); then
    PS1="$1:${PS1}"
  fi
}

prompt_bdd_setup "$@"
